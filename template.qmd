---
title: "CEVE 101: Project 03"
author: "Sydney Chang (sc316)"
date: "2024-10-23"
output: html_document
kernel: julia-1.11
code-annotations: hover
format:
    html: default
    docx: default
---


We begin by loading the required packages.

```{julia}
using Revise                      # <1>
using RainwaterHarvesting         # <2>
```

1. `Revise` allows us to update code without restarting Julia.
2. We load the `RainwaterHarvesting` package that contains our simulation tools.

### Setting the file path

Next, we specify the path to the rainfall data file and read it in.

```{julia}
filepath = "data/50.txt" # <1>   
rainfall_data = RainfallData(filepath) # <2>
```

1. This is the path to the rainfall data file for the station of interest.
2. This creates a `RainfallData` object containing the rainfall data for the specified station.

If we dig under the hood a bit, we can see that there are two main pieces of information:

- `station_info`: a dictionary containing information about the station, such as its name and location.
- `annual_data`: a dictionary mapping years to `AnnualRainfallData` objects, each containing the date and precipitation data for a given year.

### Plotting the Data

We can plot the data for one or all of the years to verify that it looks correct.

```{julia}
plot(rainfall_data) # <1>
```

1. This `plot` function is defined in [viz.jl](./RainwaterHarvesting/src/viz.jl) and is a thin wrapper around the Plots.jl package.

### Discussion

*After data cleaning, text 50--also known as Granja Station--has left data from year 1973 to present time. There is over 50 years of water collection data which is a sufficient amount of data in order to make a meaningful risk assessment. 2011 is the only year without any data. But, based on Science Direct, 2011 was a year that Ceara, Brazil did have a drought. This concludes that the missing data from 2011 is from a drought.*

*Citation* Seigerman, Cydney. "At the extremes: Assessing interrelations among the impacts of and responses to extreme hydroclimatic events in Ceará, Northeast Brazil." Science Direct, 2024.

## Understanding the Theoretical Model

*Some assumptions we are making with these theoretical models are the mass balance equation and consumption rate/time. The mass balance equation is an idealized version of the volume. This equation does not account for evaporation. In addition, consumption is assuming that the rainy season will on last for the first 150 days of the year while in reality the rainy season can last shorter or longer than this time. In addition, the average consumption of a household will vary throughout regions. To recieve a more precise average, it is ideal to get a consensus. Changing C_t to an equation instead of number will help make the mass balance equation more precise.*

$$
E_t = k \times A \times (P_s(T)- P_v)/(R \times T)
$$

- $E_t$: rate of evaporation
- $k$: empirical constant
- $A$: surface area of the water
- $P_s(T)$: saturation vapor pressure at temperature T
- $P_v$: partial pressure of vapor already present in the container
- $R$: gas constant (8.314 J/(mol·K))
- $T$: absolute temperature (K)

### Mass Balance Equation

$$
V_{t+1} = V_t + Q_t - C_t - E_t| 0 \leq V_t \leq V_\text{max}
$$

- $V_t$: the volume of water in the tank at time $t$
- $Q_t$ is the volume of water added to the tank at time $t$
- $C_t$ is the volume of water consumed at time $t$
- $V_\text{max}$: the maximum volume of the tank
- $E_t$: new evaporation formula, look above

### Inflow ($Q_t$)

$$
Q_t = \eta \times A \times \max(P_t - F, 0).
$$

### Consumption

$$
C_t = \begin{cases}
    74.1 & \quad \text{day of year} > 150 \\
    0 & \quad \text{day of year} \leq 150
\end{cases}
$$

## Model Implementation and Testing

### Defining the Model Parameters

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.85,      # <2>
    roof_area_m2=50.0,            # <3>
    first_flush_mm=1.5,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

*I changed the roof area and the first flush parameters. Increasing the roof area will increase the inflow to the water tank. The roof area is directly proportional to the inflow in the water tank. In addition decreasing the amount of water we first flush out will allow the user to use more water in their tank. The first flush is indirectly proportional to the inflow of the tank.*

### Running the Simulation for One Year

Let's run the model for the year 1981.

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

1. We select the annual rainfall data for the year 1981.
2. We run the simulation for the year 1981.
3. We plot the results, again using a `plot` function defined in [viz.jl](./RainwaterHarvesting/src/viz.jl).

To compare rainfall and tank volume:

```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```

### Reliability Analysis

```{julia}
all_years = sort(collect(keys(rainfall_data.annual_data)))          # <1>
all_results = [run_timesteps(rainfall_data.annual_data[year], param) for year in all_years]   # <2>
any_failures = [!isempty(result.failure_dates) for result in all_results]  # <3>
println("Number of years with failures: ", sum(any_failures), " out of ", length(all_years))  # <4>
```

1. We get all the years in order.
2. We run the simulation for each year.
3. We check if any failures occurred.
4. We print the number of years with failures and the total number of years.

*There is a 2% chance of failure in the tank inflow. The 2% failure comes from the 1 year of failure compared to the other 48 years of success. *

*In addition, the models are confusing to read. There are vertical lines in graph which means that there was an increase in water with no time change. Indicting that is this actually a slightly diagonal line will help readers understand the graph better. *